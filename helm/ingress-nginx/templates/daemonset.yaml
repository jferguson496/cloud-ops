---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ingress-nginx-controller
spec:
  selector:
    matchLabels:
      app: ingress-nginx-controller
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app: ingress-nginx-controller
      annotations:
        configHash: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      dnsPolicy: ClusterFirst
      containers:
        - name: controller
          image: k8s.gcr.io/ingress-nginx/controller:{{ .Values.appVersion }}
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
          args:
            - /nginx-ingress-controller
            - --publish-status-address={{ .Values.externalLoadbalancer }}
            - --election-id=ingress-controller-leader
            - --ingress-class=nginx
            - --configmap={{ .Release.Namespace }}/ingress-nginx-controller
            - --update-status-on-shutdown={{ .Values.updateStatusOnShutdown }}
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            runAsUser: 101
            allowPrivilegeEscalation: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            requests:
              cpu: {{.Values.requests.cpu}}
              memory: {{.Values.requests.memory}}
            limits:
              cpu: {{.Values.limits.cpu}}
              memory: {{.Values.limits.memory}}
      serviceAccountName: ingress-nginx
      terminationGracePeriodSeconds: 300

{{- if .Values.disruptionBudget }}
---
kind: PodDisruptionBudget
apiVersion: policy/v1beta1
metadata:
  name: controller-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: ingress-nginx-controller
{{- end }}
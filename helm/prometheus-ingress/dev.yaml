apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main-ingress
  namespace: lens-metrics
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    external-dns.alpha.kubernetes.io/hostname: prometheus.dev.rmcdigital.net
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: 15m
  managedFields:
    - manager: helm
      operation: Update
      apiVersion: extensions/v1beta1
      time: '2022-07-28T14:25:44Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:external-dns.alpha.kubernetes.io/hostname: {}
            f:kubernetes.io/ingress.class: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:nginx.ingress.kubernetes.io/force-ssl-redirect: {}
            f:nginx.ingress.kubernetes.io/proxy-body-size: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
        f:spec:
          f:rules: {}
    - manager: nginx-ingress-controller
      operation: Update
      apiVersion: networking.k8s.io/v1
      time: '2022-07-28T14:25:58Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:loadBalancer:
            f:ingress: {}
  selfLink: /apis/networking.k8s.io/v1/namespaces/lens-metrics/ingresses/main-ingress
status:
  loadBalancer:
    ingress:
      - hostname: rmc-digital-dev-main-520765229.us-east-1.elb.amazonaws.com
spec:
  rules:
    - host: prometheus.dev.rmcdigital.net
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: prometheus
                port:
                  number: 9090
name: Cloud-Ops-Main
on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        required: true
        description: Choose an Environment to Deploy
        options:
        - dev
        - staging
        - uat
        - shared
        - prod
        default: dev
      tf_command:
        description: Terraform command to run
        required: true
        type: string
     
jobs:
  terraform_plan:
    name: 'Terraform Plan'
    runs-on: devops
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
      
    - name: Terraform Init
      id: init
      run: terragrunt init
      working-directory: ./terraform/${{ github.event.inputs.choice }}
      
    - name: Terragrunt Validate
      id: validate
      run: terragrunt validate -no-color
      working-directory: ./terraform/${{ github.event.inputs.choice }}
      
    # Inits Backend and Generates an execution plan for Terraform
    - name: Terragrunt Plan
      id: plan
     # if: github.event_name == 'pull_request'
      run: terragrunt plan -no-color
      working-directory: ./terraform/${{ github.event.inputs.choice }}
      continue-on-error: true
               
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1 

  terraform_command:
    name: 'Terraform Command Input'
    runs-on: devops
    needs: terraform_plan
    environment:
      name: CloudOps_${{ github.event.inputs.choice }}
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
    # Choice of terraform command sent from initial workflow
    - name: Terragrunt Command Input
      env:
        TF_COMMAND: ${{ github.event.inputs.tf_command }}
     # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terragrunt $TF_COMMAND
      working-directory: ./terraform/${{ github.event.inputs.choice }}
      
  clean-working-directory:
    runs-on: devops
    if: ${{ always() }}
    needs: [terraform_plan, terraform_command]
    steps:
      - name: Clean working directory
        shell: bash
        run: |
         cd $RUNNER_WORKSPACE
         cd ..
         rm -r *
